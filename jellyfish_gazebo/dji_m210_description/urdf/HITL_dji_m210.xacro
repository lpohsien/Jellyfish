<?xml version="1.0"?>

<robot name="dji_m210" xmlns:xacro="http://ros.org/wiki/xacro">
	<xacro:include filename="$(find dji_m210_description)/urdf/component_snippets.xacro"/>
	<xacro:include filename="$(find dji_m210_description)/urdf/gimbal/gimbal.xacro"/>

	<!-- Arguments -->
	<xacro:arg name="hitl_model" default="true"/>


	<!-- Properties -->
	<xacro:property name="mass" value="2.355" /> <!-- [kg] -->
	<xacro:property name="mass_rotor" value="0.08" /> <!-- [kg] -->
	<xacro:property name="arm_length" value="0.17" /> <!-- [m] -->
	<xacro:property name="rotor_offset_top" value="0.1" /> <!-- [m] -->
	<xacro:property name="radius_rotor" value="0.195" /> <!-- [m] -->
	<xacro:property name="sin30" value="0.5" />
	<xacro:property name="cos30" value="0.866025403784" />
	<xacro:property name="sqrt2" value="1.4142135623730951" />
	<xacro:property name="body_width" value="0.3" />
	<xacro:property name="body_height" value="0.16" />
	<xacro:property name="gimbal_roll_min_angle" value="-0.45" />
	<xacro:property name="gimbal_roll_max_angle" value="0.45" />
	<xacro:property name="gimbal_pitch_min_angle" value="-1.57" />
	<xacro:property name="gimbal_pitch_max_angle" value="1.57" />
	<xacro:property name="gimbal_yaw_min_angle" value="-1.57" />
	<xacro:property name="gimbal_yaw_max_angle" value="1.57" />
  	<!-- Property Blocks -->

	<!-- materials -->
	<material name="black">
		<color rgba="0 0 0 1" />
	</material>

	<!-- instantiate main body -->
	<link name="base_link">
	</link>

	<link name="base_link_inertia">
		<inertial>
			<mass value="${mass}" />
			<inertia ixx="0.1547563" ixy="0.0" ixz="0.0" iyy="0.1658929" iyz="0.0" izz="0.2077" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<mesh filename="package://dji_m210_description/meshes/dji_m210/dji_m210_flipped_rotorless.dae" scale="1 1 1" />
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<box size="${body_width} ${body_width} ${body_height}" /> <!-- [m] [m] [m] -->
			</geometry>
		</collision>
	</link>

	<joint name="base_joint" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0" />
		<parent link="base_link" />
		<child link="base_link_inertia" />
	</joint>

	<!-- instantiate simple rotors-->
	
	<link name="rotor_1">
		<inertial>
			<mass value="${mass_rotor}" />
			<inertia ixx="0.1547563" ixy="0.0" ixz="0.0" iyy="0.1658929" iyz="0.0" izz="0.2077" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<cylinder length="0.02" radius="${radius_rotor}" />
			</geometry>
			<material name="black"/>
		</visual>
	</link>

	<link name="rotor_2">
		<inertial>
			<mass value="${mass_rotor}" />
			<inertia ixx="0.1547563" ixy="0.0" ixz="0.0" iyy="0.1658929" iyz="0.0" izz="0.2077" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<cylinder length="0.02" radius="${radius_rotor}" />
			</geometry>
			<material name="black"/>
		</visual>
	</link>

	<link name="rotor_3">
		<inertial>
			<mass value="${mass_rotor}" />
			<inertia ixx="0.1547563" ixy="0.0" ixz="0.0" iyy="0.1658929" iyz="0.0" izz="0.2077" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<cylinder length="0.02" radius="${radius_rotor}" />
			</geometry>
			<material name="red"/>
		</visual>
	</link>

	<link name="rotor_4">
		<inertial>
			<mass value="${mass_rotor}" />
			<inertia ixx="0.1547563" ixy="0.0" ixz="0.0" iyy="0.1658929" iyz="0.0" izz="0.2077" />
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<geometry>
				<cylinder length="0.02" radius="${radius_rotor}" />
			</geometry>
			<material name="black"/>
		</visual>
	</link>

	<!-- Instantiate joints-->

	<joint name="base_to_rotor_1" type="fixed">
		<parent link="base_link" />
		<child link="rotor_1" />
		<origin xyz="${sqrt2 * arm_length} -${sqrt2 * arm_length} ${rotor_offset_top}" rpy="0 0 0" />
	</joint>

	<joint name="base_to_rotor_2" type="fixed">
		<parent link="base_link" />
		<child link="rotor_2" />
		<origin xyz="-${sqrt2 * arm_length} ${sqrt2 * arm_length} ${rotor_offset_top}" rpy="0 0 0" />
	</joint>

	<joint name="base_to_rotor_3" type="fixed">
		<parent link="base_link" />
		<child link="rotor_3" />
		<origin xyz="${sqrt2 * arm_length} ${sqrt2 * arm_length} ${rotor_offset_top}" rpy="0 0 0" />
	</joint>

	<joint name="base_to_rotor_4" type="fixed">
		<parent link="base_link" />
		<child link="rotor_4" />
		<origin xyz="-${sqrt2 * arm_length} -${sqrt2 * arm_length} ${rotor_offset_top}" rpy="0 0 0" />
	</joint>

		<!-- DJI Gazebo Controller Plugin -->
	<gazebo>
		<plugin name='hitl_controller' filename='libdji_m210_controller_gazebo_hitl.so'>
			<initial_height>0.0</initial_height>
		</plugin>
	</gazebo>

  <!-- Mount a generic odometry sensor providing ground truth. -->
  <xacro:odometry_plugin_macro
    namespace="dji_m210/ground_truth"
    odometry_sensor_suffix=""
    parent_link="base_link"
    pose_topic="pose"
    pose_with_covariance_topic="pose_with_covariance"
    position_topic="position"
    transform_topic="transform"
    odometry_topic="odometry"
    parent_frame_id="world"
    mass_odometry_sensor="0.00001"
    measurement_divisor="1"
    measurement_delay="0"
    unknown_delay="0.0"
    noise_normal_position="0 0 0"
    noise_normal_quaternion="0 0 0"
    noise_normal_linear_velocity="0 0 0"
    noise_normal_angular_velocity="0 0 0"
    noise_uniform_position="0 0 0"
    noise_uniform_quaternion="0 0 0"
    noise_uniform_linear_velocity="0 0 0"
    noise_uniform_angular_velocity="0 0 0"
    enable_odometry_map="false"
    odometry_map=""
    image_scale=""
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
  </xacro:odometry_plugin_macro>

	<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
		<alwaysOn>true</alwaysOn>
		<updateRate>50.0</updateRate>
		<bodyName>base_link</bodyName>
		<topicName>odom</topicName>
		<gaussianNoise>0.01</gaussianNoise>
		<frameName>world</frameName>
		<xyzOffsets>0 0 0</xyzOffsets>
		<rpyOffsets>0 0 0</rpyOffsets>
	</plugin>

	<gazebo reference="rotor_3">
		<material>Gazebo/Red</material>
	</gazebo>

	<!--Slap on a gimbal and a camera-->

	<xacro:dji_m210_gimbal
		namespace="${namespace}"
		gimbal_roll_min_angle="${gimbal_roll_min_angle}"
		gimbal_roll_max_angle="${gimbal_roll_max_angle}"
		gimbal_pitch_min_angle="${gimbal_pitch_min_angle}"
		gimbal_pitch_max_angle="${gimbal_pitch_max_angle}"
		gimbal_yaw_min_angle="${gimbal_yaw_min_angle}"
		gimbal_yaw_max_angle="${gimbal_yaw_max_angle}"
		/>

</robot>
